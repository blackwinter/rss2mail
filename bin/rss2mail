#! /usr/bin/env ruby

#--
###############################################################################
#                                                                             #
# rss2mail -- Send RSS feeds as e-mail                                        #
#                                                                             #
# Copyright (C) 2007-2011 Jens Wille                                          #
#                                                                             #
# Authors:                                                                    #
#     Jens Wille <ww@blackwinter.de>                                          #
#                                                                             #
# rss2mail is free software; you can redistribute it and/or modify it under   #
# the terms of the GNU Affero General Public License as published by the Free #
# Software Foundation; either version 3 of the License, or (at your option)   #
# any later version.                                                          #
#                                                                             #
# rss2mail is distributed in the hope that it will be useful, but WITHOUT ANY #
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS   #
# FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for     #
# more details.                                                               #
#                                                                             #
# You should have received a copy of the GNU Affero General Public License    #
# along with rss2mail. If not, see <http://www.gnu.org/licenses/>.            #
#                                                                             #
###############################################################################
#++

require 'yaml'
require 'optparse'
require 'nuggets/env/user_home'

require 'rss2mail'

base = File.expand_path('../..', __FILE__)

USAGE = "Usage: #{$0} [options] <target>"
abort USAGE if ARGV.empty?

options = {
  :files   => nil,
  :reload  => false,
  :verbose => false,
  :debug   => false
}

OptionParser.new { |opts|
  opts.banner = USAGE
  opts.separator ''

  opts.on('-d', '--directory DIRECTORY', 'Process all feeds in directory') { |d|
    abort "Not a directory: #{d}"      unless File.directory?(d)
    abort "Can't read directory: #{d}" unless File.readable?(d)

    options[:files] = Dir[File.join(d, '*.yaml')]
  }

  opts.on('-r', '--reload', 'Reload feeds') {
    options[:reload] = true
  }

  opts.on('-v', '--verbose', 'Be verbose') {
    options[:verbose] = true
  }

  opts.on('-D', '--debug', "Print debug output and don't send any mails") {
    options[:debug] = true
  }

  opts.on('-h', '--help', 'Print this help message and exit') {
    abort opts.to_s
  }

  opts.on('--version', 'Print program version and exit') {
    abort "#{File.basename($0)} v#{RSS2Mail::VERSION}"
  }
}.parse!

if target = ARGV.shift
  target = target.to_sym
else
  abort "No feeds target given\n#{USAGE}"
end

templates = Hash.new { |h, k|
  h[k] = begin
    File.read(File.join(base, 'templates', "#{k}.erb"))
  rescue Errno::ENOENT
    # silently ignore
  end
}

feeds_files = options.delete(:files) || if File.directory?(d = File.join(ENV.user_home, '.rss2mail'))
  Dir[File.join(d, '*.yaml')]
else
  [File.join(base, 'feeds.yaml')]
end

feeds_files.each { |feeds_file|
  feeds = begin
    YAML.load_file(feeds_file)
  rescue Errno::ENOENT
    warn "Feeds file not found: #{feeds_file}"
    next
  end

  unless target_feeds = feeds[target]
    warn "Feeds target not found: #{target} (in #{feeds_file})"
    next
  end

  target_feeds.each { |feed|
    RSS2Mail::Feed.new(feed, options).deliver(templates) unless feed[:skip]
  }

  # write updated feed information
  File.open(feeds_file, 'w') { |file| YAML.dump(feeds, file) } unless options[:debug]
}
